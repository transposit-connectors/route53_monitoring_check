{
  "v2": {
    "transposit": {
      "dependencies": [{
        "name": "transposit/slack:v2.*.*",
        "alias": "slack",
        "title": "Slack",
        "description": "Authorize this connector if you want to use the Slack API."
      }, {
        "name": "transposit/slack_webhook:v2.*.*",
        "alias": "slack_webhook"
      }, {
        "name": "transposit/aws_cloudfront:v1.*.*",
        "alias": "aws_cloudfront"
      }, {
        "name": "transposit/opsgenie:v1.*.*",
        "alias": "opsgenie"
      }, {
        "name": "mooredstransposit/uptime_robot:latest",
        "alias": "uptime_robot"
      }, {
        "name": "transposit/aws_route53:v1.*.*",
        "alias": "aws_route53"
      }],
      "operations": [{
        "id": "webhook",
        "function": {
          "parameters": [{
            "name": "http_event",
            "default": {
              "text": "{   \"query_parameters\": {     \"api_key\": \"XXX\"   },   \"http_method\": \"POST\",   \"parsed_body\": {     \"channel_name\": \"XXX\",     \"user_id\": \"UXXX\",     \"user_name\": \"iggy\",     \"trigger_id\": \"XXX\",     \"team_domain\": \"my_domain\",     \"team_id\": \"TXXX\",     \"text\": \"\",     \"channel_id\": \"DXXX\",     \"command\": \"/test\",     \"token\": \"XXX\",     \"response_url\": \"https://hooks.slack.com/commands/TXXX/XXX/XXX\"   },   \"body\": \"token=XXX&team_id=TXXX&team_domain=my_domain&channel_id=DXXX&channel_name=XXX&user_id=UXXX&user_name=iggy&command=%2Ftest&text=&response_url=https%3A%2F%2Fhooks.slack.com%2Fcommands%2FTXXX%2FXXX%2FXXX&trigger_id=XXX\" }"
            },
            "type": "OBJECT"
          }],
          "js": "webhook.js",
          "lang": "js"
        },
        "access": {
          "requireApiKey": true,
          "webhook": true
        }
      }, {
        "id": "test_post_message",
        "tql": {
          "tql": "-- This SQL operation is useful to test the message you've\n-- constructed for your webhook. If you provide a Slack\n-- auth in \"Auth & user settings\", it will post a message\n-- to your Slackbot channel.\nSELECT * FROM slack.post_chat_message AS A\nJOIN this.get_slack_message AS B\nON A.$body.blocks = B.blocks\nAND A.$body.text = B.text\nWHERE A.$body.channel = (SELECT user_id from slack.test_auth)"
        }
      }, {
        "id": "list_distributions",
        "tql": {
          "tql": "SELECT * FROM aws_cloudfront.list_distributions\n"
        }
      }, {
        "id": "list_teams",
        "tql": {
          "tql": "SELECT * FROM opsgenie.list_teams\n"
        }
      }, {
        "id": "list_alerts",
        "tql": {
          "tql": "SELECT data.details[\"Monitor Url\"] as url FROM opsgenie.list_alerts as l\njoin opsgenie.get_alert as g\non g.identifier = l.id\n-- and l.id = '4227c09e-70d9-43f3-82d6-d1660cbeee29-1573096445634'\n -- get_alrt"
        }
      }, {
        "id": "list_hosted_zones",
        "tql": {
          "tql": "SELECT Name FROM aws_route53.list_hosted_zones\n  -- WHERE delegationsetid='<string>'\n  -- LIMIT 10\n"
        }
      }, {
        "id": "get_monitors",
        "tql": {
          "tql": "SELECT monitors.monitor FROM uptime_robot.getMonitors\n"
        }
      }, {
        "id": "unmonitored_hosts",
        "function": {
          "js": "scheduled_job.js",
          "lang": "js"
        }
      }, {
        "id": "untitled",
        "function": {
          "js": "untitled.js",
          "lang": "js"
        }
      }],
      "dataConnections": [{
        "ref": "slack_identify.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "identity.basic"
            },
            "executionLimits": {
            }
          }
        },
        "title": "Slack",
        "description": "Used to identify you on Slack"
      }, {
        "ref": "slack_bot.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "chat:write:bot"
            },
            "executionLimits": {
            }
          }
        }
      }, {
        "ref": "slack.raw"
      }],
      "javascriptAPIVersion": "3",
      "source": "src",
      "userSettingsDisplay": "GENERATED"
    }
  }
}